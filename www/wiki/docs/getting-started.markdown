[home](../) /
[docs](../docs/) /
getting-started  

Getting Started
===============

To get a clear understanding of how dwwiki works, let's look
at dwwiki directory structure.

Directory Structure
---------------------

This is how dwwiki installation directory tree looks like:

<div class="colored-code">
<code>
/                    - dwwiki installation directory
    /db              - sample database files
    /dwwiki          - the engine itself
    /sessions        - user session temporary files
    /tempfiles       - temporary files generated by dwwiki engine
    /www             - content, reports, images, etc.
        /static      - css and image files
        /templates   - page templates
        /wiki        - actual content served by dwwiki
</code>
</div>

We are interested in `wiki` directory. This is the place where
actual pages, or *reports* are stored. Look at the URL above:

```http://localhost:8087/docs/getting-started
```

The root URL - `http://localhost:8087/` points to `wiki` directory
on the file system. Then it copies the file system structure.
When you open root URL in your browser,
dwwiki will serve `index.markdown` file in `wiki` directory.
The same goes for other directories, so each directory should generally
contain `index.markdown` file, though it is not necessary.

This works the same as in apache web server. URL that points to a directory
opens `index.markdown` file in this directory if there is one.
If `index.markdown` is missing, dwwiki returns Error 404 and does not
show the content of a directory.

Other files are served by filename. All dwwiki files have extension `.markdown`.

If you omit `.markdown` in URL, dwwiki will render the file as html.
If you add `.markdown`, dwwiki will serve file source as is, as plain text, if
it is allowed by the permissions system (more on that later).

All directories under `www` may be stored anywhere on the system, not necessarily
in the common directory. It may be configured at system startup.

Creating a Report
-----------------

Since dwwiki was intended to be used as a database reporting system,
I will call al the pages *reports*.

To create a report, simply create a text file with `.markdown` extension
somewhere under `wiki` directory and point your browser to it.
Make sure the file encoding is UTF-8 if you are using non-latin characters.

That's it - you have created a new report.

Next: -> [Markdown](markdown)

----------------------------------------------------------------------

[View page source](getting-started.markdown)
[Printable html](?action=printable)
